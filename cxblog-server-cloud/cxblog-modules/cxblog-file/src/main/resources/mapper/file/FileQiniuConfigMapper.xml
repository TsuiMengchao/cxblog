<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mcx.file.mapper.FileQiniuConfigMapper">
    
    <resultMap type="FileQiniuConfig" id="FileQiniuConfigResult">
        <result property="configId"    column="config_id"    />
        <result property="accessKey"    column="access_key"    />
        <result property="bucket"    column="bucket"    />
        <result property="host"    column="host"    />
        <result property="secretKey"    column="secret_key"    />
        <result property="type"    column="type"    />
        <result property="zone"    column="zone"    />
    </resultMap>

    <sql id="selectFileQiniuConfigVo">
        select config_id, access_key, bucket, host, secret_key, type, zone from file_qiniu_config
    </sql>

    <select id="selectFileQiniuConfigList" parameterType="FileQiniuConfig" resultMap="FileQiniuConfigResult">
        <include refid="selectFileQiniuConfigVo"/>
        <where>  
            <if test="accessKey != null  and accessKey != ''"> and access_key = #{accessKey}</if>
            <if test="bucket != null  and bucket != ''"> and bucket = #{bucket}</if>
            <if test="host != null  and host != ''"> and host = #{host}</if>
            <if test="secretKey != null  and secretKey != ''"> and secret_key = #{secretKey}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="zone != null  and zone != ''"> and zone = #{zone}</if>
        </where>
    </select>
    
    <select id="selectFileQiniuConfigByConfigId" parameterType="Long" resultMap="FileQiniuConfigResult">
        <include refid="selectFileQiniuConfigVo"/>
        where config_id = #{configId}
    </select>
        
    <insert id="insertFileQiniuConfig" parameterType="FileQiniuConfig">
        insert into file_qiniu_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configId != null">config_id,</if>
            <if test="accessKey != null">access_key,</if>
            <if test="bucket != null">bucket,</if>
            <if test="host != null and host != ''">host,</if>
            <if test="secretKey != null">secret_key,</if>
            <if test="type != null">type,</if>
            <if test="zone != null">zone,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configId != null">#{configId},</if>
            <if test="accessKey != null">#{accessKey},</if>
            <if test="bucket != null">#{bucket},</if>
            <if test="host != null and host != ''">#{host},</if>
            <if test="secretKey != null">#{secretKey},</if>
            <if test="type != null">#{type},</if>
            <if test="zone != null">#{zone},</if>
         </trim>
    </insert>

    <update id="updateFileQiniuConfig" parameterType="FileQiniuConfig">
        update file_qiniu_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="accessKey != null">access_key = #{accessKey},</if>
            <if test="bucket != null">bucket = #{bucket},</if>
            <if test="host != null and host != ''">host = #{host},</if>
            <if test="secretKey != null">secret_key = #{secretKey},</if>
            <if test="type != null">type = #{type},</if>
            <if test="zone != null">zone = #{zone},</if>
        </trim>
        where config_id = #{configId}
    </update>

    <delete id="deleteFileQiniuConfigByConfigId" parameterType="Long">
        delete from file_qiniu_config where config_id = #{configId}
    </delete>

    <delete id="deleteFileQiniuConfigByConfigIds" parameterType="String">
        delete from file_qiniu_config where config_id in 
        <foreach item="configId" collection="array" open="(" separator="," close=")">
            #{configId}
        </foreach>
    </delete>
</mapper>