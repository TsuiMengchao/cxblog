<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mcx.blog.mapper.BlogArticleCollectMapper">
    
    <resultMap type="BlogArticleCollect" id="BlogArticleCollectResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="articleId"    column="article_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBlogArticleCollectVo">
        select id, user_id, article_id, create_by, create_time, update_by, update_time, remark from blog_article_collect
    </sql>

    <select id="selectBlogArticleCollectList" parameterType="BlogArticleCollect" resultMap="BlogArticleCollectResult">
        <include refid="selectBlogArticleCollectVo"/>
        <where>  
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="articleId != null "> and article_id = #{articleId}</if>
        </where>
    </select>
    
    <select id="selectBlogArticleCollectById" parameterType="Long" resultMap="BlogArticleCollectResult">
        <include refid="selectBlogArticleCollectVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBlogArticleCollect" parameterType="BlogArticleCollect" useGeneratedKeys="true" keyProperty="id">
        insert into blog_article_collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId != ''">user_id,</if>
            <if test="articleId != null">article_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="articleId != null">#{articleId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBlogArticleCollect" parameterType="BlogArticleCollect">
        update blog_article_collect
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="articleId != null">article_id = #{articleId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBlogArticleCollectById" parameterType="Long">
        delete from blog_article_collect where id = #{id}
    </delete>

    <delete id="deleteBlogArticleCollectByIds" parameterType="String">
        delete from blog_article_collect where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectCount" parameterType="BlogArticleCollect" resultType="Integer">
        SELECT COUNT(*) AS count FROM blog_article_collect
        <where>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="articleId != null "> and article_id = #{articleId}</if>
        </where>
    </select>

<!--    ==============================-->
    <select id="selectCollectList" resultType="me.mcx.blog.domain.vo.article.ApiArticleListVO">
        select c.create_time,a.*, b.NAME AS categoryName,
               b.id AS categoryId from blog_article a
                                           left join blog_article_collect c on c.article_id = a.id
                                           left JOIN blog_category b ON a.category_id = b.id
        where c.user_id = #{userId} order by c.create_time desc
    </select>
</mapper>