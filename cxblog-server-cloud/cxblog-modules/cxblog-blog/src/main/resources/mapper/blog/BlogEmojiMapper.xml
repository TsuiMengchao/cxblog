<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mcx.blog.mapper.BlogEmojiMapper">
    
    <resultMap type="BlogEmoji" id="BlogEmojiResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="url"    column="url"    />
        <result property="isStick"    column="is_stick"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBlogEmojiVo">
        select id, user_id, url, is_stick, create_by, create_time, update_by, update_time, remark from blog_emoji
    </sql>

    <select id="selectBlogEmojiList" parameterType="BlogEmoji" resultMap="BlogEmojiResult">
        <include refid="selectBlogEmojiVo"/>
        <where>  
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="url != null  and url != ''"> and url = #{url}</if>
            <if test="isStick != null "> and is_stick = #{isStick}</if>
        </where>
    </select>
    
    <select id="selectBlogEmojiById" parameterType="Long" resultMap="BlogEmojiResult">
        <include refid="selectBlogEmojiVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBlogEmoji" parameterType="BlogEmoji" useGeneratedKeys="true" keyProperty="id">
        insert into blog_emoji
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId != ''">user_id,</if>
            <if test="url != null">url,</if>
            <if test="isStick != null">is_stick,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="url != null">#{url},</if>
            <if test="isStick != null">#{isStick},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBlogEmoji" parameterType="BlogEmoji">
        update blog_emoji
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="url != null">url = #{url},</if>
            <if test="isStick != null">is_stick = #{isStick},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBlogEmojiById" parameterType="Long">
        delete from blog_emoji where id = #{id}
    </delete>

    <delete id="deleteBlogEmojiByIds" parameterType="String">
        delete from blog_emoji where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>