<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mcx.modules.blog.mapper.ArticleMapper">

    <resultMap id="selectArticleByIdToVOMap" type="me.mcx.modules.blog.domain.vo.ApiArticleInfoVO">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_Id" jdbcType="VARCHAR" property="userId"/>
        <result column="nickname" jdbcType="VARCHAR" property="username"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="content_md" jdbcType="INTEGER" property="contentMd"/>
        <result column="is_original" jdbcType="INTEGER" property="isOriginal"/>
        <result column="original_url" jdbcType="VARCHAR" property="originalUrl"/>
        <result column="keywords" jdbcType="VARCHAR" property="keywords"/>
        <result column="is_publish" jdbcType="INTEGER" property="isPublish"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="read_type" jdbcType="INTEGER" property="readType"/>
        <association property="category" javaType="me.mcx.modules.blog.domain.Category">
            <id property="id" column="cid" jdbcType="BIGINT"></id>
            <result property="name" column="cname" jdbcType="VARCHAR"></result>
        </association>
    </resultMap>


    <select id="selectArticle" resultType="me.mcx.modules.blog.domain.vo.SystemArticleListVO">
        SELECT
        a.*,
        b.NAME AS categoryName,
        group_concat( t.NAME SEPARATOR ',' ) AS tagNames
        FROM
        blog_article a
        JOIN blog_category b ON a.category_id = b.id
        JOIN blog_article_tag atg ON a.id = atg.article_id
        JOIN blog_tags t ON atg.tag_id = t.id
        <where>
            <if test="param.userId != null and param.userId != ''">
                a.user_id =#{param.userId}
            </if>
            <if test="param.title != null and param.title != ''">
                a.title like concat('%',#{param.title},'%')
            </if>
            <if test="param.categoryId != null and param.categoryId != ''">
                and a.category_id=#{param.categoryId}
            </if>
            <if test="param.isPublish != null and param.isPublish != ''">
                and a.is_publish=#{param.isPublish}
            </if>
            <if test="param.tagId != null and param.tagId != ''">
                and atg.tag_id=#{param.tagId}
            </if>
        </where>
        GROUP BY a.id order by a.is_stick desc ,a.create_time desc
    </select>

    <select id="selectArticlePrimaryKey" resultType="me.mcx.modules.blog.domain.dto.ArticleDTO">
        select a.id,
               a.title,
               a.avatar,
               a.summary,
               a.quantity,
               a.content,
               a.content_md,
               a.read_type,
               a.is_stick,
               a.is_publish,
               a.is_original,
               a.original_url,
               a.create_time,
               b.name as categoryName,
               a.is_carousel,
               a.keywords,
               a.is_recommend
        from blog_article a
                 LEFT JOIN (SELECT id, name from blog_category) b on a.category_id = b.id
        where a.id = #{id}
    </select>

    <select id="contribute" resultType="me.mcx.modules.blog.domain.vo.SystemArticleContributeVO">
        select count, date
        from
            (SELECT
            count(id) as 'count', DATE_FORMAT(create_time, '%Y-%m-%d') as date, create_time
            FROM
            `blog_article`
            where DATE_FORMAT(create_time, '%Y-%m-%d') between #{lastTime} and #{nowTime}
            GROUP BY
            `create_time`) AS blog
        ORDER BY blog.create_time ASC
    </select>

    <update id="publishAndShelf">
        update blog_article
        set is_publish=#{article.isPublish}
        where id = #{article.id}
    </update>

    <update id="putTopArticle">
        update blog_article
        set is_stick = #{article.isStick}
        where id = #{article.id}
    </update>
    <select id="selectSearchArticle" resultType="me.mcx.modules.blog.domain.vo.ApiArticleListVO">
        select a.id,
               a.title,
               a.summary,
               a.is_stick,
               a.create_time
        from blog_article a
        where LOWER(a.title) like concat('%', #{keywords}, '%') and a.is_publish = 1 order by a.create_time desc
    </select>

    <select id="selectPublicArticleList" resultType="me.mcx.modules.blog.domain.vo.ApiArticleListVO">
        select a.id, a.title, a.avatar,a.summary,a.quantity,a.is_stick,a.is_original,a.user_id,c.id as categoryId,c.name as categoryName,
               ui.nickname as username,
               ui.nickname,
               ui.avatar as userAvatar,
               a.create_time
        from blog_article a
        left join sys_user b on a.user_id = b.user_id
        left join blog_user_info ui on ui.id = b.user_info_id
        left join blog_category c on a.category_id = c.id
        where a.is_publish = 1
        <if test="categoryId != null">
           and a.category_id = #{categoryId}
        </if>
        <if test="tagId != null">
            and a.id in (select article_id from blog_article_tag where tag_id =#{tagId})
        </if>
         order by a.is_stick desc,
        <choose>
            <when test="orderByDescColumn != null and orderByDescColumn != ''">
                    a.${orderByDescColumn} desc
            </when>
            <otherwise>
                a.create_time desc
            </otherwise>
        </choose>
    </select>

    <select id="selectListArchive" resultType="me.mcx.modules.blog.domain.vo.ApiArchiveVO">
        select id,
               title,
               DATE_FORMAT(create_time, '%Y-%m') as 'time', create_time as formatTime
        from blog_article where is_publish = 1
        order by create_time desc
    </select>
    <select id="selectArticleByIdToVO" resultMap="selectArticleByIdToVOMap">
        select a.id,
               a.user_id,
               a.title,
               a.content,
               a.content_md,
               a.quantity,
               a.create_time,
               a.update_time,
               a.read_type,
               a.is_original,
               a.original_url,
               a.is_publish,
               a.keywords,
               c.id   as cid,
               c.name as cname
        from blog_article a
                 left join blog_category c on a.category_id = c.id
        where a.id = #{id}
    </select>
    <select id="selectListByBanner" resultType="me.mcx.modules.blog.domain.vo.SystemArticleListVO">
        select id, title, avatar
        from blog_article
        where is_carousel = 1 and is_publish = 1
        order by is_stick desc ,create_time desc
    </select>

    <select id="selectRecommendArticle" resultType="me.mcx.modules.blog.domain.vo.ApiArticleListVO">
        select id, title, avatar,create_time
         from blog_article where is_recommend = 1
        order by create_time desc limit 5
    </select>

    <select id="selectHotArticleList" resultType="me.mcx.modules.blog.domain.vo.ApiArticleListVO">
        select id, title
        from blog_article where is_publish = 1
        order by quantity desc limit 5
    </select>
    <select id="selectMyArticle" resultType="me.mcx.modules.blog.domain.vo.ApiArticleListVO">
        SELECT
        a.*,
        ui.nickname AS username,
        b.NAME AS categoryName,
        b.id AS categoryId
        FROM
        blog_article a
        left JOIN blog_category b ON a.category_id = b.id
        left JOIN sys_user u ON a.user_id = u.user_id
        left join blog_user_info ui on u.user_info_id = ui.id
        where a.user_id =#{userId}
        <if test="type != null and type != ''">
            and a.is_publish = #{type}
        </if>
        order by a.create_time desc
    </select>
    <select id="selectMyArticleInfo" resultType="me.mcx.modules.blog.domain.dto.ArticleInsertDTO">
        SELECT
            *
        FROM
            blog_article
        where id = #{id}
    </select>
</mapper>
